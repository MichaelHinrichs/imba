declare global { interface String {

    
    get plural(): boolean;

} }
declare module "./def.imba" { interface SomeClass {

    
    ext(): boolean;
    
    extthis(): this;
    
    get that(): this;
    
    get num(): string;

} }
declare module "./def2" { interface LateDefJS {

    
    ext(): this;
    
    get that(): this;

} }
declare global { interface ImmediateDefJS {

    
    ext(): globalThis.ImmediateDefJS;
    
    ext2(): globalThis.ImmediateDefJS;
    
    get that(): globalThis.ImmediateDefJS;

} }
declare global { interface GlobalSomeClass {

    
    ext(): globalThis.GlobalSomeClass;
    
    get that(): globalThis.GlobalSomeClass;

} }
declare module "./local" { interface Local {

    
    ext(): this;
    
    get state(): import("./def.imba").AppState;
    
    get localState(): {
        one: string;
        two: number;
        three: number;
    };
    
    get num(): boolean;
    
    get element(): import("./def.imba").ΓappΞpanel;

} }
declare global { interface Element {

     spuce: InstanceType<typeof import("./def.imba").ΓappΞbutton>;
    
    get space(): import("./def.imba").ΓappΞbutton;
    
    smeth(): InstanceType<typeof import("./def.imba").ΓappΞbutton>;
    
    get state(): import("./def.imba").AppState;
    
    get other(): import("./def.imba").ΓappΞsomething;

} }
declare global { interface HTMLElement {

    
    get state(): import("./def.imba").AppState;

} }
declare module "./def.imba" { interface ΓappΞbutton {

    
    ext(): boolean;

} }
declare module "./def.imba" { interface ΓappΞpanel {

    
    ext(): boolean;

} }
declare global { interface Element {

    
    get that(): this;
    
    ext2(): HTMLElement;

} }
declare module "./manualglobal.imba" { interface ManualGlobal {

    
    get that(): this;

} }
declare module "./autoglobal.imba" { interface AutoGlobal {

    
    get that(): this;

} }
import { Local } from "./local";
